{"version":3,"sources":["js/todoCreate.js","components/Form.js","js/todoDelete.js","components/List.js","components/Lists.js","components/App.js","index.js"],"names":["todoCreate","todoLists","setTodo","Promise","res","rej","data","title","document","getElementById","value","content","arr","JSON","parse","localStorage","getItem","push","setItem","stringify","then","val","catch","err","console","log","Form","className","onSubmit","e","preventDefault","htmlFor","id","name","placeholder","maxLength","minLength","required","todoDelete","event","nodeId","parseInt","target","parentNode","arr1","filter","i","List","keys","onClick","Lists","check","map","list","index","App","useState","useEffect","ReactDOM","render","StrictMode"],"mappings":"qOAmCeA,MAlCf,SAAoBC,EAAUC,GAClB,IAAIC,SAAQ,SAACC,EAAIC,GACrB,IAAIC,EAAK,CAACC,MAAMC,SAASC,eAAe,aAAaC,MAAMC,QAAQH,SAASC,eAAe,eAAeC,OACtGE,EAAIC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GACxDJ,EAAIK,KAAKX,GACTS,aAAaG,QAAQ,WAAWL,KAAKM,UAAUP,IAC/CR,EAAIQ,MAGPQ,MAAK,SAACC,GACHb,SAASC,eAAe,aAAaC,MAAM,GAC3CF,SAASC,eAAe,eAAeC,MAAM,GAmB7CR,EAAQmB,MAEXC,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,O,OCZfG,EAlBF,SAAC,GAAwB,IAAvBzB,EAAsB,EAAtBA,UAAUC,EAAY,EAAZA,QACrB,OACI,uBAAMyB,UAAU,WAAWC,SAAU,SAACC,GAAMA,EAAEC,iBAAiB9B,EAAWC,EAAUC,IAApF,UACI,sBAAKyB,UAAU,qBAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,uBAAOI,QAAQ,YAAf,uBACA,0BAAUC,GAAG,YAAYC,KAAK,YAAYC,YAAY,8BAA8BC,UAAU,KAAKC,UAAU,IAAIC,UAAQ,OAE7H,sBAAKV,UAAU,oBAAf,UACI,uBAAOI,QAAQ,cAAf,yBACA,0BAAUC,GAAG,cAAcC,KAAK,cAAcC,YAAY,8BAA8BC,UAAU,KAAKC,UAAU,KAAKC,UAAQ,UAGtI,qDCPGC,MARX,SAAoBC,EAAMrC,GACtBqC,EAAMT,iBACN,IAAMU,EAAOC,SAASF,EAAMG,OAAOC,WAAWX,IAE1CY,EADI/B,KAAKC,MAAMC,aAAaC,QAAQ,aAC3B6B,QAAO,SAACxB,EAAIyB,GAAL,OAASA,IAAMN,KACnCzB,aAAaG,QAAQ,WAAWL,KAAKM,UAAUyB,IAC/C1C,EAAQ0C,ICIDG,MAVf,YAAoC,IAArBC,EAAoB,EAApBA,KAAKtC,EAAe,EAAfA,MAAMR,EAAS,EAATA,QACtB,OACI,sBAAK8B,GAAIgB,EAAT,UACI,6BAAKtC,EAAMH,QACX,8BAAMG,EAAMC,UACZ,wBAAQsC,QAAS,SAACpB,GAAKA,EAAEC,iBAAiBQ,EAAWT,EAAE3B,IAAvD,wBCaGgD,MAjBf,YAAqC,IAArBjD,EAAoB,EAApBA,UAAUC,EAAU,EAAVA,QAClBiD,GAAM,EAGV,OAFc,MAAXlD,IACCkD,GAAM,GAEN,qBAAKxB,UAAU,YAAf,SAEQwB,EACQlD,EAAUmD,KAAI,SAACC,EAAKC,GAChB,OAAO,cAAC,EAAD,CAAkBN,KAAMM,EAAO5C,MAAO2C,EAAMnD,QAASA,GAA1CoD,MAEvB,MCORC,MAhBf,WAEE,MAA0BC,mBAAS,CAAC,CAACjD,MAAM,GAAGI,QAAQ,MAAtD,mBAAKV,EAAL,KAAeC,EAAf,KAMA,OALAuD,qBAAU,WACR,IAAI7C,EAAIC,KAAKC,MAAMC,aAAaC,QAAQ,aACtCd,EAAQU,KACV,IAGA,sBAAKe,UAAU,MAAf,UACE,cAAC,EAAD,CAAM1B,UAAWA,EAAWC,QAASA,IACrC,cAAC,EAAD,CAAOD,UAAWA,EAAWC,QAASA,QCV5CwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASC,eAAe,W","file":"static/js/main.3394403f.chunk.js","sourcesContent":["\nfunction todoCreate(todoLists,setTodo){\n    let fun=new Promise((res,rej)=>{\n        let data={title:document.getElementById('todoTitle').value,content:document.getElementById('todoContent').value};\n        let arr=JSON.parse(localStorage.getItem('todoList')) || [];\n        arr.push(data);\n        localStorage.setItem('todoList',JSON.stringify(arr));\n        res(arr);\n    });\n    fun\n    .then((val) =>{\n        document.getElementById('todoTitle').value='';\n        document.getElementById('todoContent').value='';\n\n        /*\n            v.0.0.1\n            hence 'setTodo' accepts array so '...todoLists' spread out all the elements(here objects) from the array, \n            'val' is the newly created object, \n            at last all these elements(here objects) are stored in the array([]);\n            without using '[]' inside 'setTodo' will give error in using 'map' function in 'Lists.js' file\n             as 'map' function expects array where as we are passing objects in form of 'todoLists'('todoLists' updated as 'setTodo' changes)\n        */\n\n        /*\n            v0.0.2 ------> Bug fix.\n            Before using spread operator for '...todoLists' don't allow to render the pages after first 'todo'insertion.\n            It was because hence 'useTodo([])' is set with empty array so 'todoLists' variable is intialised to 'null'(as at frist render useState is returning null due to empty array)\n            and same thing was happening after each 'todo' insertion. SO intially we have to refresh the page one tme to let eveything work fine as page refresh trigger\n            the 'useEffect' and 'useEffect' doesn't use 'spread' operator to chage 'state' value.\n            So in this bug fix I used same method(wwhich we used in useEffect) to change sate value.\n        */\n        setTodo(val);\n    })\n    .catch((err)=>console.log(err));\n}\nexport default todoCreate;","import '../css/Form.css';\nimport todoCreate from '../js/todoCreate';\n\nconst Form = ({todoLists,setTodo}) =>{\n    return(\n        <form className='todoForm' onSubmit={(e) =>{e.preventDefault();todoCreate(todoLists,setTodo)}}>\n            <div className='todoFormContainers'>\n                <div className='todoFormContainer'>\n                    <label htmlFor='todoTitle'>Add Title</label>\n                    <textarea id='todoTitle' name='todoTitle' placeholder='add title to you todo......' maxLength='30' minLength='6' required/>\n                </div>\n                <div className='todoFormContainer'>\n                    <label htmlFor='todoContent'>Add Content</label>\n                    <textarea id='todoContent' name='todoContent' placeholder='add what you want todo.....' maxLength='50' minLength='10' required/>\n                </div>\n            </div>\n            <button>Submit Todo</button>\n        </form>\n    )\n};\n\nexport default Form;","\n    function todoDelete(event,setTodo){\n        event.preventDefault();\n        const nodeId=parseInt(event.target.parentNode.id);\n        let arr=JSON.parse(localStorage.getItem('todoList'));\n        let arr1=arr.filter((val,i)=>i !== nodeId);\n        localStorage.setItem('todoList',JSON.stringify(arr1));\n        setTodo(arr1)\n    }\nexport default todoDelete;","import todoDelete from '../js/todoDelete';\nfunction List({keys,value,setTodo}){\n    return (\n        <div id={keys}>\n            <h3>{value.title}</h3>\n            <div>{value.content}</div>\n            <button onClick={(e)=>{e.preventDefault();todoDelete(e,setTodo)}}>Delete</button>\n        </div>\n    );\n}\n\nexport default List;","import List from './List';\n\nfunction Lists({todoLists,setTodo}) {\n    let check=false;\n    if(todoLists!=null)\n        check=true;\n    return (\n        <div className='todoLists'>\n            {\n                check ?\n                        todoLists.map((list,index) =>{\n                            return <List key={index} keys={index} value={list} setTodo={setTodo} />\n                        })\n                      :\"\"\n            }\n        </div>\n    );\n}\n\nexport default Lists;","import {useState,useEffect} from 'react';\nimport '../css/App.css';\nimport Form from './Form';\nimport Lists from './Lists';\nfunction App() {\n\n  let [todoLists,setTodo] = useState([{title:'',content:''}]);\n  useEffect(()=>{\n    let arr=JSON.parse(localStorage.getItem('todoList'));\n      setTodo(arr);\n  },[]);  \n\n  return (\n    <div className=\"App\">\n      <Form todoLists={todoLists} setTodo={setTodo}/>\n      <Lists todoLists={todoLists} setTodo={setTodo}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}