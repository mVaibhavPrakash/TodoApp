{"version":3,"sources":["js/todoCreate.js","components/Form.js","js/todoDelete.js","js/active.js","components/List.js","components/Lists.js","components/TodoBoiler.js","components/App.js","index.js"],"names":["todoCreate","todoLists","setTodo","Promise","res","rej","data","title","document","getElementById","value","content","priority","querySelector","arr","JSON","parse","localStorage","getItem","push","setItem","stringify","then","val","catch","err","console","log","Form","className","onSubmit","e","preventDefault","htmlFor","id","name","placeholder","required","type","defaultChecked","todoDelete","event","nodeId","parseInt","target","parentNode","splice","activeElement","index","activeIndex","setActive","List","active","onClick","Lists","useState","setActiveIndex","map","list","TodoBoiler","useEffect","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fd0d8426.chunk.js","sourcesContent":["function todoCreate(todoLists, setTodo) {\n  let fun = new Promise((res, rej) => {\n    let data = {\n      title: document.getElementById('todoTitle').value,\n      content: document.getElementById('todoContent').value,\n      priority: document.querySelector('input[name=\"priority\"]:checked').value,\n    };\n    let arr = JSON.parse(localStorage.getItem('todoList')) || [];\n    arr.push(data);\n    localStorage.setItem('todoList', JSON.stringify(arr));\n    res(arr);\n  });\n  fun\n    .then((val) => {\n      document.getElementById('todoTitle').value = '';\n      document.getElementById('todoContent').value = '';\n\n      /*\n            v.0.0.1\n            hence 'setTodo' accepts array so '...todoLists' spread out all the elements(here objects) from the array, \n            'val' is the newly created object, \n            at last all these elements(here objects) are stored in the array([]);\n            without using '[]' inside 'setTodo' will give error in using 'map' function in 'Lists.js' file\n             as 'map' function expects array where as we are passing objects in form of 'todoLists'('todoLists' updated as 'setTodo' changes)\n        */\n\n      /*\n            v0.0.2 ------> Bug fix.\n            Before using spread operator for '...todoLists' don't allow to render the pages after first 'todo' insertion.\n            It was because hence 'useTodo([])' is set with empty array so 'todoLists' variable is initialized to 'null'(as at first render useState is returning null due to empty array)\n            and same thing was happening after each 'todo' insertion. SO initially we have to refresh the page one tme to let everything work fine as page refresh trigger\n            the 'useEffect' and 'useEffect' doesn't use 'spread' operator to change 'state' value.\n            So in this bug fix I used same method(which we used in useEffect) to change sate value.\n        */\n      setTodo(val);\n    })\n    .catch((err) => console.log(err));\n}\nexport default todoCreate;\n","import '../css/Form.css';\nimport todoCreate from '../js/todoCreate';\n\nconst Form = ({ todoLists, setTodo }) => {\n  return (\n    <form\n      className=\"todoForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        todoCreate(todoLists, setTodo);\n      }}>\n      <label className=\"formLabel\" htmlFor=\"todoTitle\">\n        Add Title\n      </label>\n      <input\n        className=\"todoInput\"\n        id=\"todoTitle\"\n        name=\"todoTitle\"\n        placeholder=\"add title to you todo......\"\n        required\n      />\n      <label className=\"formLabel\" htmlFor=\"todoContent\">\n        Add Content\n      </label>\n      <input\n        className=\"todoInput\"\n        id=\"todoContent\"\n        name=\"todoContent\"\n        placeholder=\"add what you want todo.....\"\n        required\n      />\n      <div className=\"dropdownContent\">\n        <br />\n        <input type=\"radio\" name=\"priority\" value=\"normal\" defaultChecked />\n        Normal\n        <br />\n        <input type=\"radio\" name=\"priority\" value=\"medium\" /> Medium\n        <br />\n        <input type=\"radio\" name=\"priority\" value=\"high\" /> High\n      </div>\n      <button id=\"formButton\">Submit Todo</button>\n    </form>\n  );\n};\n\nexport default Form;\n","\n    function todoDelete(event,setTodo){\n        event.preventDefault();\n        const nodeId=parseInt(event.target.parentNode.id);\n        let arr=JSON.parse(localStorage.getItem('todoList'));\n        arr.splice(nodeId,1);\n        localStorage.setItem('todoList',JSON.stringify(arr));\n        setTodo(arr)\n    }\nexport default todoDelete;","const activeElement = (index, activeIndex, setActive) => {\n  activeIndex === index ? setActive(null) : setActive(index);\n};\n\nexport default activeElement;\n","import todoDelete from '../js/todoDelete';\nimport '../css/List.css';\nimport activeElement from '../js/active';\n\nfunction List({ id, value, setTodo, active, activeIndex, setActive }) {\n  return (\n    <div className=\"todoList\" id={id}>\n      <h3\n        className={`todoTitle ${value.priority}`}\n        onClick={(e) => {\n          e.preventDefault();\n          activeElement(id, activeIndex, setActive);\n        }}>\n        {value.title}\n      </h3>\n\n      <p className={`todoContent${active}`}>{value.content}</p>\n\n      <button\n        id=\"todoEditButton\"\n        onClick={(e) => {\n          e.preventDefault();\n          todoDelete(e, setTodo);\n        }}>\n        Edit\n      </button>\n\n      <button\n        id=\"todoDeleteButton\"\n        onClick={(e) => {\n          e.preventDefault();\n          todoDelete(e, setTodo);\n        }}>\n        Delete\n      </button>\n    </div>\n  );\n}\n\nexport default List;\n","import { useState } from 'react';\nimport List from './List';\n\nfunction Lists({ todoLists, setTodo }) {\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  return (\n    <div className=\"TodoLists\">\n      {todoLists\n        ? todoLists.map((list, index) => {\n            const active = index === activeIndex ? 'active' : '';\n            return (\n              <List\n                key={index}\n                id={index}\n                value={list}\n                setTodo={setTodo}\n                active={active}\n                activeIndex={activeIndex}\n                setActive={setActiveIndex}\n              />\n            );\n          })\n        : ''}\n    </div>\n  );\n}\n\nexport default Lists;\n","import { useState, useEffect } from 'react';\nimport '../css/TodoBoiler.css';\nimport Form from './Form';\nimport Lists from './Lists';\n\nexport default function TodoBoiler() {\n  let [todoLists, setTodo] = useState([{ title: '', content: '' }]);\n  useEffect(() => {\n    let arr = JSON.parse(localStorage.getItem('todoList'));\n    setTodo(arr);\n  }, []);\n  return (\n    <div className=\"TodoBoiler\">\n      <Form todoLists={todoLists} setTodo={setTodo} />\n      <Lists todoLists={todoLists} setTodo={setTodo} />\n    </div>\n  );\n}\n","import TodoBoiler from './TodoBoiler';\nimport '../css/App.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoBoiler />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}